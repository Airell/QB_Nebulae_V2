; polyphonic oscillator .csd for
; the Nebulae Eurorack module
; www.qubitelectronix.com
;
; Andrew Ikenberry
; andrewikenberry@gmail.com
; Winter 2014

; Ported from Nebulae_V1 by:
; Chris Erin
; github.com/chriserin
; chris.erin@gmail.com

nebconfigbegin
freeze,latching,rising
file,latching,rising
record,latching,rising
nebconfigend

gitab1 ftgen 1, 0, 4096, 10, 1, .5, .333, .25, .2, .166, .142, .125, .111, .1, .09, .083, .076, .071, .066, .062
gitab2 ftgen 2, 0, 4096, 10, 1, 0, .333, 0, .2, 0, .142, 0, .111, 0, .09, 0, .076, 0, .066, 0
gitab3 ftgen 3, 0, 4096, 10, 1, 0, .111, 0, .04, 0, .02, 0, .012, 0, .008, 0, .005, 0, .004, 0

instr 1

  kmajorflag init 0
  kminorflag init 0
  kdomflag init 0
  kchord init 1

  ktable scale gkspeed, 1, 3.9; Speed
  kpitch scale gkpitch, -2, 3; Pitch
  kpitch pow 2, kpitch; Make pitch 1V/Octave
  kpitch = kpitch *100
  kglide scale gkwindow, 0, 0.175; Glide
  kpitch portk kpitch, kglide
  krootamp scale gkblend, 0, 1; Mix
  kthirdamp scale gkoverlap, 0, 1; Grain Size
  kfifthamp scale gkdensity, 0, 1; Grain Rate
  kseventhamp ctrl14 1, 9, 10, 0, 1; Loop Start


  ; Freeze
  if (gkrecord == 0 && kminorflag == 0) then

    kchord = 2
    kminorflag = 1
    kmajorflag = 0
    kdomflag = 0

  elseif (gkrecord == 1 && kminorflag == 0) then

    kchord = 2
    kminorflag = 1
    kmajorflag = 0
    kdomflag = 0

  endif

  ; Next File
  if (gkfilestate == 0 && kdomflag == 0) then

    kchord = 3

    kminorflag = 0
    kmajorflag = 0
    kdomflag = 1

  elseif (gkfilestate == 1) then

    kdomflag = 0

  endif

  ; Recall
  if (gkfreeze == 0 && kmajorflag == 0) then

    kchord = 1

    kminorflag = 0
    kmajorflag = 1
    kdomflag = 0

  elseif (gkfreeze == 1 && kmajorflag == 1) then

    kmajorflag = 1

  endif

  if (kchord == 1) then

    ; major 7
    aroot    oscilikt krootamp, kpitch, ktable
    athird   oscilikt kthirdamp, kpitch * 1.26, ktable
    afifth   oscilikt kfifthamp, kpitch * 1.5, ktable
    aseventh oscilikt kseventhamp, kpitch * 1.89, ktable

  elseif (kchord == 2) then

    ; minor 7
    aroot    oscilikt krootamp, kpitch, ktable
    athird   oscilikt kthirdamp, kpitch * 1.18, ktable
    afifth   oscilikt kfifthamp, kpitch * 1.5, ktable
    aseventh oscilikt kseventhamp, kpitch * 1.78, ktable

  elseif (kchord == 3) then

    ; dom 7
    aroot    oscilikt krootamp, kpitch, ktable
    athird   oscilikt kthirdamp, kpitch * 1.26, ktable
    afifth   oscilikt kfifthamp, kpitch * 1.5, ktable
    aseventh oscilikt kseventhamp, kpitch * 1.78, ktable

  endif

  out (aroot + athird + afifth + aseventh) / 7

endin
